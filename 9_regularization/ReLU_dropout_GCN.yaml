!obj:pylearn2.train.Train {

    dataset: &train !obj:keypoints_dataset.FacialKeypointDataset {
        which_set: 'train',
        preprocessor : !obj:pylearn2.datasets.preprocessing.Pipeline {
                           items: [ 
                               !obj:pylearn2.datasets.preprocessing.ShuffleAndSplit 
                                {
                                    seed: 34533232,
                                    start: 0,
                                    stop: 6500
                                },
                               !obj:pylearn2.datasets.preprocessing.GlobalContrastNormalization {}
                            ]
                        }, 
        fit_preprocessor: True,
        fit_test_preprocessor: True,
    },

    model: !obj:pylearn2.models.mlp.MLP {
        layers: [
                 !obj:pylearn2.models.mlp.RectifiedLinear {
                     layer_name: 'h1',
                     dim: 6000,
                     irange: 0.05,
                 },
                 !obj:pylearn2.models.mlp.Linear {
                     layer_name: 'y',
                     dim: 30,
                     irange: 0.05,
                 }
                ],
        nvis: 9216
    },

    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: 100,
        learning_rate: 0.00001,
        monitoring_dataset:
            {
                'train' : *train ,
                'valid' : !obj:keypoints_dataset.FacialKeypointDataset {
                              which_set: 'train',
                              preprocessor: !obj:pylearn2.datasets.preprocessing.Pipeline {
                                  items: [ 
                                       !obj:pylearn2.datasets.preprocessing.ShuffleAndSplit 
                                        {
                                            seed: 34533232,
                                            start: 6500,
                                            stop: 7049
                                        },
                                       !obj:pylearn2.datasets.preprocessing.GlobalContrastNormalization {}
                                  ]
                              }, 
                              fit_preprocessor: True,
                              fit_test_preprocessor: True,
                          }
            },

        cost: !obj:pylearn2.costs.cost.SumOfCosts { 
            costs: [
                !obj:pylearn2.costs.mlp.missing_target_cost.MissingTargetCost 
                {
                },
                !obj:pylearn2.costs.mlp.dropout.Dropout
                {
                }
            ]
        },

        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: "valid_objective",
            prop_decrease: 0.,
            N: 10
        }
    },

    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_objective',
             save_path: "ReLU3.pkl"
        },
    ]
}
